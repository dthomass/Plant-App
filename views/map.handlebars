<!DOCTYPE html>
<html>
  <head>
    <title>Showing pixel and tile coordinates</title>
    <meta name="viewport" content="initial-scale=1.0">
    <meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<link href="/css/bootstrap.min.css" rel="stylesheet">
	<link href="/css/bootstrap-theme.min.css" rel="stylesheet">
	<link href="/css/introHCI.css" rel="stylesheet">
    <style>
      /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
      #map {
        height: 80%;
      }
      /* Optional: Makes the sample page fill the window. */
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
    </style>
  </head>
  <body id="main" style="background-color:#fff; background-image: url('/images/Bg.jpg')">
      <div class="container">
        <div class="cover-container-quiz">
            <div class="masthead clearfix" style="position: relative">
                <div class="inner">
                <h1 class="masthead-brand page-header"><a href="index">Plant App</a></h1>
                <nav>
                    <ul class="nav masthead-nav">
                        <li><a href="map?image=tree" style="color:#e0b42f">Plant Map</a></li>
                        <li><a href="about">About us</a></li>
                        <li><a href="help">Help</a></li>
                        <li><a href="login">Log In</a></li>
                    </ul>
                </nav>
                </div>
            </div>
        </div>
    </div>

    <div id="map"></div>
       
  
    <script>
        
        function getParams() {
                    var idx = document.URL.indexOf('?');
                    var params = new Array();
                    if (idx != -1) {
                        var pairs = document.URL.substring(idx + 1, document.URL.length).split('&');
                        for (var i = 0; i < pairs.length; i++) {
                                    nameVal = pairs[i].split('=');
                                    params[nameVal[0]] = nameVal[1];
                                }
                            }
                            return params;
                        }

                    params = getParams();
                    plantPicture = "/images/"+unescape(params["image"])+".jpg";
                    document.getElementById("quizPicture").src="/images/"+plantPicture+".jpg";

        // Data for the markers consisting of a name, a LatLng and a zIndex for the
      // order in which these markers should display on top of each other.
      var beaches = [
        ['Bondi Beach', 32.890542, -117.274856, 4],
        ['Coogee Beach', 32.923036, -117.259052, 5],
        ['Cronulla Beach', 32.028249, -117.157507, 3],
        ['Manly Beach', 32.80010128657071, -117.28747820854187, 2],
        ['Maroubra Beach', 32.950198, -117.259302, 1]
      ];

   
      function initMap() {
        var SanDiego = new google.maps.LatLng(32.73, -117.1446);

        var map = new google.maps.Map(document.getElementById('map'), {
          center: SanDiego,
          zoom: 13
        });

        var coordInfoWindow = new google.maps.InfoWindow();
        coordInfoWindow.setContent(createInfoWindowContent(SanDiego, map.getZoom(), plantPicture));
        coordInfoWindow.setPosition(SanDiego);
        coordInfoWindow.open(map);

        map.addListener('zoom_changed', function() {
          coordInfoWindow.setContent(createInfoWindowContent(SanDiego, map.getZoom(), plantPicture));
          coordInfoWindow.open(map);
        });
          setMarkers(map);
      }

      var TILE_SIZE = 256;

      function createInfoWindowContent(latLng, zoom, plantPicture) {
        var scale = 1 << zoom;

        var worldCoordinate = project(latLng);

        var pixelCoordinate = new google.maps.Point(
            Math.floor(worldCoordinate.x * scale),
            Math.floor(worldCoordinate.y * scale));

        return [
          'Balboa Park, San Diego, CA 92104',
 /*         'Latitude and Longitude: ' + latLng,*/
          '<br><img src="'+plantPicture+'" height="100">'
        ].join('<br>');
      }

      // The mapping between latitude, longitude and pixels is defined by the web
      // mercator projection.
      function project(latLng) {
        var siny = Math.sin(latLng.lat() * Math.PI / 180);

        // Truncating to 0.9999 effectively limits latitude to 89.189. This is
        // about a third of a tile past the edge of the world tile.
        siny = Math.min(Math.max(siny, -0.9999), 0.9999);

        return new google.maps.Point(
            TILE_SIZE * (0.5 + latLng.lng() / 360),
            TILE_SIZE * (0.5 - Math.log((1 + siny) / (1 - siny)) / (4 * Math.PI)));
      }
        
           function setMarkers(map) {
        // Adds markers to the map.

        // Marker sizes are expressed as a Size of X,Y where the origin of the image
        // (0,0) is located in the top left of the image.

        // Origins, anchor positions and coordinates of the marker increase in the X
        // direction to the right and in the Y direction down.
        var image = {
          url: 'https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png',
          // This marker is 20 pixels wide by 32 pixels high.
          size: new google.maps.Size(20, 32),
          // The origin for this image is (0, 0).
          origin: new google.maps.Point(0, 0),
          // The anchor for this image is the base of the flagpole at (0, 32).
          anchor: new google.maps.Point(0, 32)
        };
        // Shapes define the clickable region of the icon. The type defines an HTML
        // <area> element 'poly' which traces out a polygon as a series of X,Y points.
        // The final coordinate closes the poly by connecting to the first coordinate.
        var shape = {
          coords: [1, 1, 1, 20, 18, 20, 18, 1],
          type: 'poly'
        };
        for (var i = 0; i < beaches.length; i++) {
          var beach = beaches[i];
          var marker = new google.maps.Marker({
            position: {lat: beach[1], lng: beach[2]},
            map: map,
            icon: image,
            shape: shape,
            title: beach[0],
            zIndex: beach[3]
          });
        }
      }
    </script>
  
    <script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBZg1QQ6DEF8FOT8lgkA3i55har3lhba0M&callback=initMap">
    </script>
  </body>
</html>
